{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/attendance-tracker/attendance-tracker.component.ts","webpack:///src/app/home/attendance-tracker/attendance-tracker.component.html","webpack:///src/app/home/attendance-tracker/attendance-tracker.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/manage-employee/manage-employee.component.ts","webpack:///src/app/home/manage-employee/manage-employee.component.html","webpack:///src/app/home/manage-employee/manage-employee.service.ts","webpack:///src/app/home/reports/reports.component.ts","webpack:///src/app/home/reports/reports.component.html","webpack:///src/app/home/reports/reports.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AttendanceTrackerComponent","attSvc","activatedRoute","empId","officeHoursSpent","isEmployeePresentInside","params","subscribe","console","log","getDetails","getTimeInside","res","getCurrentInStatus","time","alert","updateAttendance","entryTime","exitTime","updateEntryTime","updateExitTime","AttendanceTrackerService","http","get","responseType","attRecord","post","providedIn","HomeComponent","ManageEmployeeComponent","empSvc","newEmp","emailId","empName","refreshEmployeeList","getAllEmployees","empList","addNewEmployee","removeEmployee","ManageEmployeeService","delete","ReportsComponent","reportSvc","getCurrentlyActiveEmployeesInside","presentEmpList","getTimeInsideReport","map","rec","officeHoursReport","getOfficeHoursReport","ReportsService","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ManageEmployeeComponent } from './home/manage-employee/manage-employee.component';\nimport { AttendanceTrackerComponent } from './home/attendance-tracker/attendance-tracker.component';\nimport { ReportsComponent } from './home/reports/reports.component';\n\n\nconst routes: Routes =\n  [{ path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home',\n    component: HomeComponent,\n    children: [\n      { path: 'tracker', component: AttendanceTrackerComponent },\n      { path: 'tracker/:empId', component: AttendanceTrackerComponent },\n      { path: 'reports', component: ReportsComponent },\n      { path: 'employees', component: ManageEmployeeComponent }\n    ]\n  }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ManageEmployeeComponent } from './home/manage-employee/manage-employee.component';\nimport { AttendanceTrackerComponent } from './home/attendance-tracker/attendance-tracker.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReportsComponent } from './home/reports/reports.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ManageEmployeeComponent,\n    AttendanceTrackerComponent,\n    ReportsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AttendanceTrackerService } from './attendance-tracker.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-attendance-tracker',\n  templateUrl: './attendance-tracker.component.html',\n  styleUrls: ['./attendance-tracker.component.scss']\n})\nexport class AttendanceTrackerComponent implements OnInit {\n\n  constructor(public attSvc: AttendanceTrackerService,\n    private activatedRoute: ActivatedRoute) {\n    this.activatedRoute.params.subscribe(params => {\n      console.log('RouteParams in attendance tracker -', params);\n        if(params.empId) {\n          this.empId = params.empId;\n          this.getDetails()\n        } \n    });\n  }\n\n  public empId = '';\n  public officeHoursSpent = '';  \n  public isEmployeePresentInside = ''\n\n  ngOnInit(): void {\n  }\n\n  public getDetails() {\n    this.attSvc.getTimeInside(this.empId).subscribe(res => {\n      console.log(res)\n      this.officeHoursSpent = res + '';\n    });\n    this.attSvc.getCurrentInStatus(this.empId).subscribe(res => {\n      console.log(res)\n      this.isEmployeePresentInside= res + '';\n    });\n    \n  }\n\n  public updateEntryTime(time){\n    if(this.empId === '') {\n      alert('enter empid')\n    }\n    else this.attSvc\n    .updateAttendance({entryTime:time, empId:this.empId})\n    .subscribe();;\n  }\n\n  public updateExitTime(time){\n    if(this.empId === '') {\n      alert('enter empid')\n    }\n    else this.attSvc\n    .updateAttendance({exitTime:time, empId:this.empId})\n    .subscribe();;\n  }\n\n\n}\n","\n<div>\n    <h3>Employee Attendance</h3>\n <input [(ngModel)]=\"empId\" placeholder=\"Enter Employee ID\"/>\n <button class=\"get-button\" (click)=\"getDetails()\">  GetDetails  </button> \n\n <div>\n<br>\nTotal Office Hours till last swipe OUT :<b> {{officeHoursSpent}}</b>\n<br>\nIs Employe inside office now : <b>{{isEmployeePresentInside}}</b>\n</div>\n\n<hr>\n<br>\n<div>\n    <h3>Update Todays Attendance</h3>\n    Enter IN Time  \n    <input \n     #entryTime placeholder=\"HH:MM:SS\"\n     style=\"height: 18px;\"/>\n    \n     <br><button class=\"get-button\" (click)=\"updateEntryTime(entryTime.value)\">  Update IN  </button> \n     <br>\n    <br>\n    Enter OUT Time \n    <input\n    #exitTime placeholder=\"HH:MM:SS\"\n    style=\"height: 18px;\"/>    \n    <br><button class=\"get-button\" (click)=\"updateExitTime(exitTime.value)\">   Update OUT  </button> \n\n    <br>\n    <br>\n    <!-- <small>Office Hours are between 8am to 8pm</small> -->\n</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttendanceTrackerService {\n\n  constructor(private http: HttpClient) { }\n\n\n  public getTimeInside (empId) {\n    return this.http.get('http://localhost:8080/api/v1/attendance/timeInside/'+empId,\n                        {responseType: 'text'});\n  }\n\n  public getCurrentInStatus (empId) {\n    return this.http.get('http://localhost:8080/api/v1/attendance/empStatus/'+empId,\n                        {responseType: 'text'});\n  }\n\n  \n  public updateAttendance(attRecord) {\n    return this.http.post('http://localhost:8080/api/v1/attendance/update'\n                          ,attRecord\n                          ,{responseType: 'text'});\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    \n    \n    <h1>Employee Attendance</h1>\n\n    \n<a [routerLink]=\"['/home/employees']\">\n    Manage Employees\n</a>\n<br>\n<a [routerLink]=\"['/home/tracker']\">\n    Track Attendance\n</a>\n<br>\n<a [routerLink]=\"['/home/reports']\">\n    Check Reports\n</a>\n<hr>\n\n<router-outlet></router-outlet>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ManageEmployeeService } from './manage-employee.service';\n\n@Component({\n  selector: 'app-manage-employee',\n  templateUrl: './manage-employee.component.html',\n  styleUrls: ['./manage-employee.component.scss']\n})\nexport class ManageEmployeeComponent implements OnInit {\n\n  constructor(private empSvc: ManageEmployeeService) { }\n \n  public empList;\n  public newEmp = {emailId:'', empName:''};\n\n  ngOnInit(): void {\n      this.refreshEmployeeList();\n  }\n\n  public refreshEmployeeList(){\n    this.empSvc.getAllEmployees().subscribe(empList => {\n      this.empList = empList;\n    })\n  }\n  public addEmployee() {\n    // this.empList.push(this.newEmp);\n     // console.log(this.newEmp);\n    this.empSvc.addNewEmployee(this.newEmp).subscribe(res=>{\n        this.refreshEmployeeList();\n    });\n    this.newEmp = {emailId:'', empName:''};\n  }\n  public removeEmployee(empId: string ) {\n    this.empSvc.removeEmployee(empId).subscribe(res=>{\n      this.refreshEmployeeList();\n  });\n  }\n\n}\n","<div>\n    <h3>List Of Employees</h3>\n    <table class=\"employees\">\n\n        <tr>\n            <th>Employee Id</th>\n            <th>Name</th>\n            <th>Email Id</th>\n            <th>Manage</th>\n        </tr>\n        <tr>\n            <td> </td>\n            <td> <input [(ngModel)]=\"newEmp.empName\" placeholder=\"Type to add new entry..\" /> </td>\n            <td> <input [(ngModel)]=\"newEmp.emailId\" /> </td>\n            <td> <button *ngIf=\"newEmp.empName\" class=\"add-button\" (click)=\"addEmployee()\"> AddNew </button> </td>\n            <!-- <td>\n            <button [routerLink]=\"['/home/tracker']\">\n                Total Hours\n            </button> \n        </td> -->\n\n        </tr>\n        <tr *ngFor=\"let emp of empList\">\n            <td>\n                <span class=\"empid\" [routerLink]=\"['/home/tracker/'+  emp.empId ]\">\n                    {{  emp.empId  }}\n                </span>\n            </td>\n            <td> {{  emp.empName }} </td>\n            <td> {{  emp.emailId }} </td>\n            <td>\n                <button class=\"delete-button\" (click)=\"removeEmployee( emp.empId )\">\n                    X\n                </button>\n            </td>\n\n        </tr>\n\n    </table>\n\n    <br>\n    <small><i>\n            *Click on employee id to mark employee's attendance</i></small>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManageEmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n\n  public getAllEmployees (): Observable<Object[]> {\n    return this.http.get<Object[]>('http://localhost:8080/api/v1/emp/all');\n  }\n\n  public addNewEmployee (newEmp): Observable<Object> {\n    return this.http.post('http://localhost:8080/api/v1/emp/add',\n                                    newEmp);\n  }\n\n  public removeEmployee (empId): Observable<Object> {\n    return this.http.delete('http://localhost:8080/api/v1/emp/remove/' + empId);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ReportsService } from './reports.service';\n\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor(private reportSvc:ReportsService) { }\n\n  public presentEmpList;\n  public officeHoursReport;\n\n  ngOnInit(): void {\n  }\n\n  \n  public getCurrentlyActiveEmployeesInside() {\n    this.reportSvc.getCurrentlyActiveEmployeesInside().subscribe(res => {\n    //  console.log(res)\n      this.presentEmpList= res;\n    });\n  }\n\n  public getOfficeHoursReport() {\n    // call backend and convert seconds to hours before saving to officeHoursReport \n    this.reportSvc.getTimeInsideReport()\n    .subscribe(res => {\n      console.log(res)\n       res.map(rec => \n          {\n          if(rec[2] && rec[2]>0){\n          //  convert seconds to hours \n          rec[2] = rec[2]/(60*60);\n          }\n       });\n      this.officeHoursReport= res;\n    });\n  }\n\n}\n","<div>\n<h3>Reports</h3>\n<hr>\n<div>\n<h4>Employees Inside Office Now</h4>\n<button class=\"get-button\" (click)=\"getCurrentlyActiveEmployeesInside()\">  Retrieve Report  </button> \n<br>\n<br>\n\n<table class=\"employees\" *ngIf=\"presentEmpList\">\n    \n    <tr>\n        <th>Employee Id</th>\n        <th>Name</th>\n        <th>Email Id</th>\n    </tr>\n    <tr *ngFor=\"let emp of presentEmpList\">\n        <td>\n            <span class=\"empid\" [routerLink]=\"['/home/tracker/'+  emp.empId ]\">\n                {{  emp.empId  }}\n            </span>\n        </td>\n        <td> {{  emp.empName }} </td>\n        <td> {{  emp.emailId }} </td>\n    </tr>\n   \n</table>\n\n\n</div>\n\n<hr>\n<div>\n<h4>Time Spent By All Employees in Office </h4>\n<button class=\"get-button\" (click)=\"getOfficeHoursReport()\">  Retrieve Report  </button> \n<br>\n<small><i>[*excluding current day if only swipe in present]</i></small>\n\n<br>\n<br>\n\n<table class=\"employees\" *ngIf=\"officeHoursReport\">\n    \n    <tr>\n        <th>Employee Id</th>\n        <th>Name</th>\n        <th>Total Time Spent</th>\n    </tr>\n    <tr *ngFor=\"let res of officeHoursReport\">\n        <td> {{  res[0]  }} </td>\n        <td> {{   res[1] }} </td>\n        <td> {{   res[2] }} Hours </td>\n        <td></td>\n    </tr>\n   \n</table>\n</div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n  constructor(private http: HttpClient) { }\n\n  \n\n  public getCurrentlyActiveEmployeesInside (): Observable<Object[]>  {\n    return this.http.get<Object[]>('http://localhost:8080/api/v1/attendance/activeNow');\n  }\n  \n  public getTimeInsideReport():Observable<Object[]>  {\n    return this.http.get<Object[]>('http://localhost:8080/api/v1/attendance/timeInside/all');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}